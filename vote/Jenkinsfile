pipeline {
    agent none

    stages{
        stage("vote-build"){
            agent {
                    docker{
                        image: 'python:2.7.16-slim'
                        args '--user root'
                    }
                }
            when{
                changeset "**/vote/**"
            }
            steps{
                echo 'Compiling vote app'
                dir('vote'){
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        stage("vote-test"){
            agent {
                    docker{
                        image: 'python:2.7.16-slim'
                        args '--user root'
                    }
            }
            when{
                changeset "**/vote/**"
            }
            steps{
                echo 'Running Unit Tests on vote app'
                dir("vote"){
                    sh 'pip install -r requirements.txt'
                    sh 'nosetests -v'
                }
            }
        }

        stage('vote integration'){
        agent any 
        when{ 
        changeset "**/vote/**" 
        branch 'master' 
        } 
        steps{ 
        echo 'Running Integration Tests on vote app' 
        dir('vote'){ 
            sh 'sh integration_test.sh' 
        } 
        } 
    } 

        stage('vote-docker-package') {
        agent any
        when {
            changeset '**/vote/**'
            branch 'master'
        }
        steps {
            echo 'Packaging vote app with docker'
            script {
            docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                def resultImage = docker.build("ksilver/vote:v${env.BUILD_ID}", './vote')
                resultImage.push()
                resultImage.push("${env.BRANCH_NAME}")
                resultImage.push('latest')
            }
            }
        }
        }

    }
}